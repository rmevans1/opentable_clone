import Header from "@/app/search/components/Header";
import RestaurantCard from "@/app/search/components/RestaurantCard";
import SideBar from "@/app/search/components/SideBar";
import {PRICE, PrismaClient} from "@prisma/client";

const prisma = new PrismaClient();

interface SearchParams { city?: string, cuisine?: string, price?: PRICE}

export const metadata = {
    title: 'Search Results | OpenTable',
    description: 'Generated by create next app',
}

const fetchRestaurantsByLocation = async (searchParams: SearchParams) => {
    const where: any = {};

    if(searchParams.city) {
        const location = {
            name: {
                equals: searchParams.city.toLowerCase()
            }
        }
        where.location = location;
    }

    if(searchParams.cuisine) {
        const cuisine = {
            name: {
                equals: searchParams.cuisine.toLowerCase()
            }
        }
        where.cuisine = cuisine;
    }

    if(searchParams.price) {
        const price = {
            equals: searchParams.price
        }

        where.price = price;
    }
    const select = {
        id: true,
        name: true,
        main_image: true,
        slug: true,
        price: true,
        location: true,
        cuisine: true,
        reviews: true,
    };

    return prisma.restaurant.findMany({
        where,
        select: select
    });
}

const fetchCities = async () => {
    const cities = await prisma.location.findMany();

    return cities;
}

const fetchCuisines = async () => {
    const cuisines = await prisma.cuisine.findMany();

    return cuisines;
}

export default async function Search({searchParams}: {searchParams: SearchParams}) {
    const restaurants = await fetchRestaurantsByLocation(searchParams);
    const cities = await fetchCities();
    const cuisines = await fetchCuisines();
    return (
        <>
            <Header />
            <div className="flex py-4 m-auto w-2/3 justify-between items-start">
                <SideBar cities={cities} cuisines={cuisines} searchParams = {searchParams}/>
                <div className="w-5/6">
                    {restaurants.length ?
                        restaurants.map((restaurant) => (
                            <RestaurantCard restaurant={restaurant}/>
                        ))
                        :
                        <p>Sorry no restaurants found.</p>
                    }
                </div>
            </div>
        </>
    )
}